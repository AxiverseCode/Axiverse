// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: AssetService.proto
// </auto-generated>
// Original file comments:
// Asset Service
//
// Consumer service on the management of assets.
#pragma warning disable 1591
#region Designer generated code

using System;
using System.Threading;
using System.Threading.Tasks;
using grpc = global::Grpc.Core;

namespace Axiverse.Services.Proto {
  public static partial class AssetService
  {
    static readonly string __ServiceName = "AssetService";

    static readonly grpc::Marshaller<global::Axiverse.Services.Proto.CreateAssetClassRequest> __Marshaller_CreateAssetClassRequest = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Axiverse.Services.Proto.CreateAssetClassRequest.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::Axiverse.Services.Proto.CreateAssetClassResponse> __Marshaller_CreateAssetClassResponse = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Axiverse.Services.Proto.CreateAssetClassResponse.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::Axiverse.Services.Proto.DeleteAssetClassRequest> __Marshaller_DeleteAssetClassRequest = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Axiverse.Services.Proto.DeleteAssetClassRequest.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::Axiverse.Services.Proto.DeleteAssetClassResponse> __Marshaller_DeleteAssetClassResponse = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Axiverse.Services.Proto.DeleteAssetClassResponse.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::Axiverse.Services.Proto.CreateAssetRequest> __Marshaller_CreateAssetRequest = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Axiverse.Services.Proto.CreateAssetRequest.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::Axiverse.Services.Proto.CreateAssetResponse> __Marshaller_CreateAssetResponse = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Axiverse.Services.Proto.CreateAssetResponse.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::Axiverse.Services.Proto.DeleteAssetRequest> __Marshaller_DeleteAssetRequest = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Axiverse.Services.Proto.DeleteAssetRequest.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::Axiverse.Services.Proto.DeleteAssetResponse> __Marshaller_DeleteAssetResponse = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Axiverse.Services.Proto.DeleteAssetResponse.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::Axiverse.Services.Proto.TransferAssetRequest> __Marshaller_TransferAssetRequest = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Axiverse.Services.Proto.TransferAssetRequest.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::Axiverse.Services.Proto.TransferAssetResponse> __Marshaller_TransferAssetResponse = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Axiverse.Services.Proto.TransferAssetResponse.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::Axiverse.Services.Proto.ExecuteTransactionRequest> __Marshaller_ExecuteTransactionRequest = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Axiverse.Services.Proto.ExecuteTransactionRequest.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::Axiverse.Services.Proto.ExecuteTransactionResponse> __Marshaller_ExecuteTransactionResponse = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Axiverse.Services.Proto.ExecuteTransactionResponse.Parser.ParseFrom);

    static readonly grpc::Method<global::Axiverse.Services.Proto.CreateAssetClassRequest, global::Axiverse.Services.Proto.CreateAssetClassResponse> __Method_CreateAssetClass = new grpc::Method<global::Axiverse.Services.Proto.CreateAssetClassRequest, global::Axiverse.Services.Proto.CreateAssetClassResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "CreateAssetClass",
        __Marshaller_CreateAssetClassRequest,
        __Marshaller_CreateAssetClassResponse);

    static readonly grpc::Method<global::Axiverse.Services.Proto.DeleteAssetClassRequest, global::Axiverse.Services.Proto.DeleteAssetClassResponse> __Method_DeleteAssetClass = new grpc::Method<global::Axiverse.Services.Proto.DeleteAssetClassRequest, global::Axiverse.Services.Proto.DeleteAssetClassResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "DeleteAssetClass",
        __Marshaller_DeleteAssetClassRequest,
        __Marshaller_DeleteAssetClassResponse);

    static readonly grpc::Method<global::Axiverse.Services.Proto.CreateAssetRequest, global::Axiverse.Services.Proto.CreateAssetResponse> __Method_CreateAsset = new grpc::Method<global::Axiverse.Services.Proto.CreateAssetRequest, global::Axiverse.Services.Proto.CreateAssetResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "CreateAsset",
        __Marshaller_CreateAssetRequest,
        __Marshaller_CreateAssetResponse);

    static readonly grpc::Method<global::Axiverse.Services.Proto.DeleteAssetRequest, global::Axiverse.Services.Proto.DeleteAssetResponse> __Method_DeleteAsset = new grpc::Method<global::Axiverse.Services.Proto.DeleteAssetRequest, global::Axiverse.Services.Proto.DeleteAssetResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "DeleteAsset",
        __Marshaller_DeleteAssetRequest,
        __Marshaller_DeleteAssetResponse);

    static readonly grpc::Method<global::Axiverse.Services.Proto.TransferAssetRequest, global::Axiverse.Services.Proto.TransferAssetResponse> __Method_TransferAsset = new grpc::Method<global::Axiverse.Services.Proto.TransferAssetRequest, global::Axiverse.Services.Proto.TransferAssetResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "TransferAsset",
        __Marshaller_TransferAssetRequest,
        __Marshaller_TransferAssetResponse);

    static readonly grpc::Method<global::Axiverse.Services.Proto.ExecuteTransactionRequest, global::Axiverse.Services.Proto.ExecuteTransactionResponse> __Method_ExecuteTransaction = new grpc::Method<global::Axiverse.Services.Proto.ExecuteTransactionRequest, global::Axiverse.Services.Proto.ExecuteTransactionResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "ExecuteTransaction",
        __Marshaller_ExecuteTransactionRequest,
        __Marshaller_ExecuteTransactionResponse);

    /// <summary>Service descriptor</summary>
    public static global::Google.Protobuf.Reflection.ServiceDescriptor Descriptor
    {
      get { return global::Axiverse.Services.Proto.AssetServiceReflection.Descriptor.Services[0]; }
    }

    /// <summary>Base class for server-side implementations of AssetService</summary>
    public abstract partial class AssetServiceBase
    {
      public virtual global::System.Threading.Tasks.Task<global::Axiverse.Services.Proto.CreateAssetClassResponse> CreateAssetClass(global::Axiverse.Services.Proto.CreateAssetClassRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task<global::Axiverse.Services.Proto.DeleteAssetClassResponse> DeleteAssetClass(global::Axiverse.Services.Proto.DeleteAssetClassRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task<global::Axiverse.Services.Proto.CreateAssetResponse> CreateAsset(global::Axiverse.Services.Proto.CreateAssetRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task<global::Axiverse.Services.Proto.DeleteAssetResponse> DeleteAsset(global::Axiverse.Services.Proto.DeleteAssetRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task<global::Axiverse.Services.Proto.TransferAssetResponse> TransferAsset(global::Axiverse.Services.Proto.TransferAssetRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task<global::Axiverse.Services.Proto.ExecuteTransactionResponse> ExecuteTransaction(global::Axiverse.Services.Proto.ExecuteTransactionRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

    }

    /// <summary>Client for AssetService</summary>
    public partial class AssetServiceClient : grpc::ClientBase<AssetServiceClient>
    {
      /// <summary>Creates a new client for AssetService</summary>
      /// <param name="channel">The channel to use to make remote calls.</param>
      public AssetServiceClient(grpc::Channel channel) : base(channel)
      {
      }
      /// <summary>Creates a new client for AssetService that uses a custom <c>CallInvoker</c>.</summary>
      /// <param name="callInvoker">The callInvoker to use to make remote calls.</param>
      public AssetServiceClient(grpc::CallInvoker callInvoker) : base(callInvoker)
      {
      }
      /// <summary>Protected parameterless constructor to allow creation of test doubles.</summary>
      protected AssetServiceClient() : base()
      {
      }
      /// <summary>Protected constructor to allow creation of configured clients.</summary>
      /// <param name="configuration">The client configuration.</param>
      protected AssetServiceClient(ClientBaseConfiguration configuration) : base(configuration)
      {
      }

      public virtual global::Axiverse.Services.Proto.CreateAssetClassResponse CreateAssetClass(global::Axiverse.Services.Proto.CreateAssetClassRequest request, grpc::Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        return CreateAssetClass(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::Axiverse.Services.Proto.CreateAssetClassResponse CreateAssetClass(global::Axiverse.Services.Proto.CreateAssetClassRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_CreateAssetClass, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::Axiverse.Services.Proto.CreateAssetClassResponse> CreateAssetClassAsync(global::Axiverse.Services.Proto.CreateAssetClassRequest request, grpc::Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        return CreateAssetClassAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::Axiverse.Services.Proto.CreateAssetClassResponse> CreateAssetClassAsync(global::Axiverse.Services.Proto.CreateAssetClassRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_CreateAssetClass, null, options, request);
      }
      public virtual global::Axiverse.Services.Proto.DeleteAssetClassResponse DeleteAssetClass(global::Axiverse.Services.Proto.DeleteAssetClassRequest request, grpc::Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        return DeleteAssetClass(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::Axiverse.Services.Proto.DeleteAssetClassResponse DeleteAssetClass(global::Axiverse.Services.Proto.DeleteAssetClassRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_DeleteAssetClass, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::Axiverse.Services.Proto.DeleteAssetClassResponse> DeleteAssetClassAsync(global::Axiverse.Services.Proto.DeleteAssetClassRequest request, grpc::Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        return DeleteAssetClassAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::Axiverse.Services.Proto.DeleteAssetClassResponse> DeleteAssetClassAsync(global::Axiverse.Services.Proto.DeleteAssetClassRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_DeleteAssetClass, null, options, request);
      }
      public virtual global::Axiverse.Services.Proto.CreateAssetResponse CreateAsset(global::Axiverse.Services.Proto.CreateAssetRequest request, grpc::Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        return CreateAsset(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::Axiverse.Services.Proto.CreateAssetResponse CreateAsset(global::Axiverse.Services.Proto.CreateAssetRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_CreateAsset, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::Axiverse.Services.Proto.CreateAssetResponse> CreateAssetAsync(global::Axiverse.Services.Proto.CreateAssetRequest request, grpc::Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        return CreateAssetAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::Axiverse.Services.Proto.CreateAssetResponse> CreateAssetAsync(global::Axiverse.Services.Proto.CreateAssetRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_CreateAsset, null, options, request);
      }
      public virtual global::Axiverse.Services.Proto.DeleteAssetResponse DeleteAsset(global::Axiverse.Services.Proto.DeleteAssetRequest request, grpc::Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        return DeleteAsset(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::Axiverse.Services.Proto.DeleteAssetResponse DeleteAsset(global::Axiverse.Services.Proto.DeleteAssetRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_DeleteAsset, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::Axiverse.Services.Proto.DeleteAssetResponse> DeleteAssetAsync(global::Axiverse.Services.Proto.DeleteAssetRequest request, grpc::Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        return DeleteAssetAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::Axiverse.Services.Proto.DeleteAssetResponse> DeleteAssetAsync(global::Axiverse.Services.Proto.DeleteAssetRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_DeleteAsset, null, options, request);
      }
      public virtual global::Axiverse.Services.Proto.TransferAssetResponse TransferAsset(global::Axiverse.Services.Proto.TransferAssetRequest request, grpc::Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        return TransferAsset(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::Axiverse.Services.Proto.TransferAssetResponse TransferAsset(global::Axiverse.Services.Proto.TransferAssetRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_TransferAsset, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::Axiverse.Services.Proto.TransferAssetResponse> TransferAssetAsync(global::Axiverse.Services.Proto.TransferAssetRequest request, grpc::Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        return TransferAssetAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::Axiverse.Services.Proto.TransferAssetResponse> TransferAssetAsync(global::Axiverse.Services.Proto.TransferAssetRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_TransferAsset, null, options, request);
      }
      public virtual global::Axiverse.Services.Proto.ExecuteTransactionResponse ExecuteTransaction(global::Axiverse.Services.Proto.ExecuteTransactionRequest request, grpc::Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        return ExecuteTransaction(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::Axiverse.Services.Proto.ExecuteTransactionResponse ExecuteTransaction(global::Axiverse.Services.Proto.ExecuteTransactionRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_ExecuteTransaction, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::Axiverse.Services.Proto.ExecuteTransactionResponse> ExecuteTransactionAsync(global::Axiverse.Services.Proto.ExecuteTransactionRequest request, grpc::Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        return ExecuteTransactionAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::Axiverse.Services.Proto.ExecuteTransactionResponse> ExecuteTransactionAsync(global::Axiverse.Services.Proto.ExecuteTransactionRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_ExecuteTransaction, null, options, request);
      }
      /// <summary>Creates a new instance of client from given <c>ClientBaseConfiguration</c>.</summary>
      protected override AssetServiceClient NewInstance(ClientBaseConfiguration configuration)
      {
        return new AssetServiceClient(configuration);
      }
    }

    /// <summary>Creates service definition that can be registered with a server</summary>
    /// <param name="serviceImpl">An object implementing the server-side handling logic.</param>
    public static grpc::ServerServiceDefinition BindService(AssetServiceBase serviceImpl)
    {
      return grpc::ServerServiceDefinition.CreateBuilder()
          .AddMethod(__Method_CreateAssetClass, serviceImpl.CreateAssetClass)
          .AddMethod(__Method_DeleteAssetClass, serviceImpl.DeleteAssetClass)
          .AddMethod(__Method_CreateAsset, serviceImpl.CreateAsset)
          .AddMethod(__Method_DeleteAsset, serviceImpl.DeleteAsset)
          .AddMethod(__Method_TransferAsset, serviceImpl.TransferAsset)
          .AddMethod(__Method_ExecuteTransaction, serviceImpl.ExecuteTransaction).Build();
    }

  }
}
#endregion
