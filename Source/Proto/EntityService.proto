// EntityService
//
//
syntax = "proto3";

option csharp_namespace = "Axiverse.Services.Proto";

message Entity {
	string id = 1;

	Vector3 position = 2;

	Vector3 velocity = 3;

	Quaternion rotation = 4;

	string class = 5;
}

service EntityService {

	rpc GetState(GetStateRequest) returns (GetStateResponse);

	rpc CreateEntity(CreateEntityRequest) returns (CreateEntityResponse);

	rpc DeleteEntity(DeleteEntityRequest) returns (DeleteEntityResponse);

	rpc GetEntity(GetEntityRequest) returns (GetEntityResponse);

	rpc Stream(stream ClientEvent) returns (stream ServerEvent);

}

message Vector3 {
	float x = 1;
	float y = 2;
	float z = 3;
}

message Quaternion {
	float x = 1;
	float y = 2;
	float z = 3;
	float w = 4;
	// w is inferred from a normalized quaternion
}

message ClientEvent {
	Entity entity = 1;
}

message ServerEvent {

	repeated Entity entities = 1;

	// Spatial events.
	repeated SpatialEvent spatial = 2;

	// Change events.
	repeated ChangeEvent change = 3;

	// An event regarding the spatial parameters of an entity.
	message SpatialEvent {
		// The id of the entity.
		string id = 1;

		// The linear position.
		Vector3 linearPosition = 2;

		// The linear acceleration.
		Vector3 linearAcceleartion = 3;

		// The angular position.
		Quaternion angularPosition = 4;

		// The angular acceleration
		Vector3 angularAcceleration = 5;
	}

	// An event regarding a change in the entity.
	message ChangeEvent {
		// The types of change.
		enum ChangeType {
			// Unknown default event.
			Unknown = 0;

			// An entity has entered the scope.
			Enter = 1;

			// An entity has left the scope.
			Leave = 2;

			// An entity was destroyed.
			Destroy = 3;
		}

		// The id of the entity.
		string id = 1;

		// The type of change.
		ChangeType type = 2;

		// The parameters of change.
		string value = 3;
	}
}

message GetStateRequest {

}

message GetStateResponse {
	float time = 1;
	float entities = 2;
}

message CreateEntityRequest {
	string name = 1;
}

message CreateEntityResponse {
	string id = 1;
}

message DeleteEntityRequest {
	string id = 1;
}

message DeleteEntityResponse {

}

message GetEntityRequest {
	string id = 1;
}

message GetEntityResponse {

}