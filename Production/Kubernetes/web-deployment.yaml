apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  annotations:
    kompose.cmd: C:\ProgramData\chocolatey\lib\kubernetes-kompose\tools\kompose.exe
      convert -o .\Kubernetes\
    kompose.version: 1.12.0 (0ab07be)
  creationTimestamp: null
  labels:
    io.kompose.service: web
  name: web
spec:
  replicas: 1
  strategy: {}
  template:
    metadata:
      creationTimestamp: null
      labels:
        io.kompose.service: web
    spec:
      containers:
      - env:
        - name: CHAT_SERVICE_HOST
          valueFrom:
            configMapKeyRef:
              key: CHAT_SERVICE_HOST
              name: web-axiverse-env
        - name: CHAT_SERVICE_PORT
          valueFrom:
            configMapKeyRef:
              key: CHAT_SERVICE_PORT
              name: web-axiverse-env
        - name: ENTITY_SERVICE_HOST
          valueFrom:
            configMapKeyRef:
              key: ENTITY_SERVICE_HOST
              name: web-axiverse-env
        - name: ENTITY_SERVICE_PORT
          valueFrom:
            configMapKeyRef:
              key: ENTITY_SERVICE_PORT
              name: web-axiverse-env
        - name: IDENTITY_SERVICE_DATABASE
          valueFrom:
            configMapKeyRef:
              key: IDENTITY_SERVICE_DATABASE
              name: web-axiverse-env
        - name: IDENTITY_SERVICE_DATABASE_PORT
          valueFrom:
            configMapKeyRef:
              key: IDENTITY_SERVICE_DATABASE_PORT
              name: web-axiverse-env
        - name: IDENTITY_SERVICE_HOST
          valueFrom:
            configMapKeyRef:
              key: IDENTITY_SERVICE_HOST
              name: web-axiverse-env
        - name: IDENTITY_SERVICE_PORT
          valueFrom:
            configMapKeyRef:
              key: IDENTITY_SERVICE_PORT
              name: web-axiverse-env
        - name: WEB_SERVER_PORT
          valueFrom:
            configMapKeyRef:
              key: WEB_SERVER_PORT
              name: web-axiverse-env
        image: web
        name: web
        ports:
        - containerPort: 8000
        resources: {}
      restartPolicy: Always
status: {}
